<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>http://smetj.net</title><link href="file:///home/smetj/projects/github/smetj.net/output/" rel="alternate"></link><link href="file:///home/smetj/projects/github/smetj.net/output/feeds/uncategorized.atom.xml" rel="self"></link><id>file:///home/smetj/projects/github/smetj.net/output/</id><updated>2013-06-05T01:26:00+02:00</updated><entry><title>Installing PyPy with Gevent and virtualenv on Fedora</title><link href="file:///home/smetj/projects/github/smetj.net/output/installing-pypy-with-gevent-and-virtualenv-on-fedora.html" rel="alternate"></link><updated>2013-06-05T01:26:00+02:00</updated><author><name>smetj</name></author><id>tag:file:///home/smetj/projects/github/smetj.net/output,2013-06-05:installing-pypy-with-gevent-and-virtualenv-on-fedora.html</id><summary type="html">&lt;p&gt;PyPy has been on my radar for a while but I have never really brought
myself to the point of actually trying it. &amp;nbsp;Recently, a notification
caught to my attention stating PyPy 2.0.2 was released and had support
to run Gevent. &amp;nbsp;Good news! I was looking at speed improvements for
my&amp;nbsp;&lt;a class="reference external" href="https://github.com/smetj/wishbone/tree/0.4"&gt;Wishbone library&lt;/a&gt; and decided to spend some effort into getting
PyPy with Gevent up and running. &amp;nbsp;The information available explaining
how to setup Gevent in PyPy is rather sparse which might be a bit time
consuming when you have to figure out the bits and pieces. &amp;nbsp;After some
tinkering I got PyPy with Gevent up and running within virtualenv on a
Fedora host. &amp;nbsp;Here are my notes, It might be useful for you to and save
some previous time:&lt;/p&gt;
&lt;p&gt;Before you proceed make sure you have read the
&amp;quot;&lt;a class="reference external" href="http://pypy.org/download.html#building-from-source"&gt;building-from-source&lt;/a&gt;&amp;quot; instructions from the PyPy site.&lt;/p&gt;
&lt;div class="section" id="compiling"&gt;
&lt;h2&gt;Compiling&lt;/h2&gt;
&lt;p&gt;PyPy has some binaries available but they can only be used on Ubuntu so
we'll have to download the source and compile from scratch.&lt;/p&gt;
&lt;p&gt;Start by &lt;a class="reference external" href="http://pypy.org/download.html"&gt;downloading the source&lt;/a&gt; and unpack the tarball.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ tar -xvjf pypy-2.0.2-src.tar.bz2
&lt;/pre&gt;
&lt;p&gt;Before starting to compile make sure we have all required libraries
installed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ yum install openssl-devel libffi-devel ncurses-devel expat-devel bzip2-devel
&lt;/pre&gt;
&lt;p&gt;Move into our unpacked directory and start the compilation. &amp;nbsp;In the
below examples we use the Python version which comes with your os to run
the compilation process.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ cd pypy-2.0.2-src/pypy/goal
$ python ../../rpython/bin/rpython --opt=jit targetpypystandalone.py
&lt;/pre&gt;
&lt;p&gt;The compilation process is fairly lengthy. &amp;nbsp;It took +- 90 minutes(!) on
my laptop for the process to finish.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prepare-the-installation"&gt;
&lt;h2&gt;Prepare the installation&lt;/h2&gt;
&lt;p&gt;When the compilation has finished we should have a file called
&lt;em&gt;pypy-c&lt;/em&gt; in the current directory.&lt;/p&gt;
&lt;p&gt;Best is to move the complete install to the /opt/ directory and
rename the directory appropriately.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mv pypy-2.0.2-src /opt/pypy-2.0.2
&lt;/pre&gt;
&lt;p&gt;Now let's use virtualenv to create an isolated instance of PyPy, keeping
your freshly compiled one clean:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ virtualenv -p /opt/pypy-2.0.2/pypy/goal/pypy-c ~/pypy-2.0.2
$ . ~/pypy-2.0.2/bin/activate
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="gevent"&gt;
&lt;h2&gt;Gevent&lt;/h2&gt;
&lt;p&gt;First make sure you have following library installed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ yum install libev-devel
&lt;/pre&gt;
&lt;p&gt;Install the &lt;a class="reference external" href="https://pypi.python.org/pypi/cffi"&gt;cffi&lt;/a&gt; module:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(pypy-2.0.2)$ pip install cffi
&lt;/pre&gt;
&lt;p&gt;Install a &lt;a class="reference external" href="https://github.com/schmir/gevent"&gt;version of Gevent&lt;/a&gt; which has been modified to run on PyPy.
&amp;nbsp;Make sure we install Gevent inside our virtualenv:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone https://github.com/schmir/gevent.git
$ cd gevent
$ git checkout pypy-hacks
$ . ~/pypy-2.0.2/bin/activate
(pypy-2.0.2)$ pypy setup.py install
&lt;/pre&gt;
&lt;p&gt;Now we need one last modification which implements gevent.core as cffi
module:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone https://github.com/gevent-on-pypy/pypycore.git
$ cd pypycore
$ . ~/pypy-2.0.2/bin/activate
(pypy-2.0.2)$ CFLAGS=-O2 pip install -e .
&lt;/pre&gt;
&lt;p&gt;If setup.py complains it can not locate &lt;em&gt;ev.h&lt;/em&gt; it's possible the library
search path isn't complete. &amp;nbsp;In that case locate the location of the
file and add that directory to pypycore.py (starts at line 207) using
the &lt;em&gt;include_dirs&lt;/em&gt; variable:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
libev = C = ffi.verify(&amp;quot;&amp;quot;&amp;quot;   // passed to the real C compiler
#include

void gevent_noop(struct ev_loop *_loop, void *watcher, int revents) { }
&amp;quot;&amp;quot;&amp;quot;, libraries=[&amp;quot;ev&amp;quot;], include_dirs=[&amp;quot;/usr/include/libev&amp;quot;])
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="test"&gt;
&lt;h2&gt;Test&lt;/h2&gt;
&lt;p&gt;Before starting&amp;nbsp;&lt;em&gt;PyPy&lt;/em&gt; we have to make sure gevent used the right
gevent.core:*
*&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ export GEVENT_LOOP=pypycore.loop
&lt;/pre&gt;
&lt;p&gt;Now start PyPy and execute some gevent code:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ . ~/pypy-2.0.2/bin/activate
(pypy-2.0.2)$ pypy
Python 2.7.3 (5acfe049a5b0cd0de158f62553a98f5ef364fd29, Jun 01 2013, 08:37:22)
[PyPy 2.0.2 with GCC 4.7.2 20121109 (Red Hat 4.7.2-8)] on linux2
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
And now for something completely different: ``PyPy 1.3 released (windows
binaries included)''
&amp;gt;&amp;gt;&amp;gt;&amp;gt; import gevent
&amp;gt;&amp;gt;&amp;gt;&amp;gt; for _ in xrange(100):
....     gevent.spawn(gevent.sleep, 1)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As you can see setting up PyPy with Gevent requires a bit of work.  Once setup
into a virtualenv it's really easy to use, experiment and rebuild.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Have a lot of fun running Gevent on PyPy!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>