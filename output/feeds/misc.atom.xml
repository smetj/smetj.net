<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>smetj.net</title><link href="file:///home/smetj/projects/github/smetj.net/output/" rel="alternate"></link><link href="file:///home/smetj/projects/github/smetj.net/output/feeds/misc.atom.xml" rel="self"></link><id>file:///home/smetj/projects/github/smetj.net/output/</id><updated>2012-12-31T14:27:00+01:00</updated><entry><title>New Year Python Meme 2012</title><link href="file:///home/smetj/projects/github/smetj.net/output/new-year-python-meme-2012.html" rel="alternate"></link><updated>2012-12-31T14:27:00+01:00</updated><author><name>smetj</name></author><id>tag:file:///home/smetj/projects/github/smetj.net/output,2012-12-31:new-year-python-meme-2012.html</id><summary type="html">&lt;p&gt;Following &lt;a class="reference external" href="http://blog.ziade.org/2012/12/23/new-years-python-meme-2012/"&gt;Tarek Ziad√©'s idea for a 2012 New Year Python Meme&lt;/a&gt; here's
mine&lt;/p&gt;
&lt;div class="section" id="what-is-the-coolest-python-application-framework-or-library-you-have-discovered-in-2012"&gt;
&lt;h2&gt;What is the coolest Python application, framework or library you have discovered in 2012?&lt;/h2&gt;
&lt;p&gt;That must be &lt;a class="reference external" href="http://www.gevent.org/"&gt;Gevent&lt;/a&gt;. &amp;nbsp;It's possible I have been&amp;nbsp;dabbling&amp;nbsp;around with
it before 2012, but this year I really got into Gevent. &amp;nbsp;I really like
greenthreads and how Gevent deals with them. &amp;nbsp;When I discovered that, I
just had the urge to rewrite everything again with Gevent and
greenthreads. &amp;nbsp;Gevent really gave a boost to my Python productivity.
&amp;nbsp;Thank you &lt;a class="reference external" href="http://denisbilenko.com/"&gt;Denis Bilenko&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-new-programming-technique-did-you-learn-in-2012"&gt;
&lt;h2&gt;What new programming technique did you learn in 2012?&lt;/h2&gt;
&lt;p&gt;At a certain point in time we all want to have some sort of
&amp;quot;concurrency&amp;quot; between the different moving parts of the application
we're writing. &amp;nbsp;Processes, threads, async network &amp;nbsp;IO all come with
their own complexities... &amp;nbsp;For me it always boiled down to the fact I
loose oversight of the application pretty quickly once it starts to
expand. &amp;nbsp;Especially when an application is written with many callbacks.
&amp;nbsp;I don't like callbacks. &amp;nbsp;It puts a knot in my brain (and productivity)
whenever I'm working with them. &amp;nbsp;&lt;strong&gt;`I personally prefer clarity over
efficiency`_&lt;/strong&gt;&amp;nbsp;(within reason of course). &amp;nbsp;Keeping this in mind, when
going through the RabbitMQ tutorials and documentation ecosystem I came
across the concepts of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Message_passing"&gt;message passing&lt;/a&gt; and the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Actor_model#Fundamental_concepts"&gt;actor model&lt;/a&gt;, this
opened for me a new way of thinking and approach to create solutions to
the problems I'm confronted with. &amp;nbsp;It allows me to visualize and
identify (both mentally as in a diagram) the different components of a
program and the interaction between them and above all avoid the
callback jungle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-the-name-of-the-open-source-project-you-contributed-the-most-in-2012-what-did-you-do"&gt;
&lt;h2&gt;What is the name of the open source project you contributed the most in 2012? What did you do?&lt;/h2&gt;
&lt;p&gt;I must admit that I have been pretty much occupied with my own projects
so I haven't really contributed to any projects other than &lt;a class="reference external" href="https://github.com/smetj"&gt;my own&lt;/a&gt;.
&amp;nbsp;Most of my time went into creating the &lt;a class="reference external" href="https://github.com/smetj/wishbone"&gt;WishBone&lt;/a&gt;&amp;nbsp;library. &amp;nbsp;A library
which allows one to create coroutine based event pipeline solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-was-the-python-blog-or-website-you-read-the-most-in-2012"&gt;
&lt;h2&gt;What was the Python blog or website you read the most in 2012?&lt;/h2&gt;
&lt;p&gt;Most Python information came through via Twitter. &amp;nbsp;I have recently
discovered &lt;a class="reference external" href="http://www.pythonweekly.com/"&gt;Python Weekly&lt;/a&gt;&amp;nbsp;and &lt;a class="reference external" href="http://pycoders.com/"&gt;Pycoder's weekly&lt;/a&gt;&amp;nbsp;which meanwhile have
proven to be a great source of Python info.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-are-the-three-top-things-you-want-to-learn-in-2013"&gt;
&lt;h2&gt;What are the three top things you want to learn in 2013?&lt;/h2&gt;
&lt;p&gt;More than 3 things I would say, but I'll start with this list:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Explore and learn the new stuff Python 3.3 brings.&lt;/li&gt;
&lt;li&gt;ZeroMQ and its Python bindings.&lt;/li&gt;
&lt;li&gt;More on metric analysis...&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="what-are-the-top-software-app-or-lib-you-wish-someone-would-write-in-2013"&gt;
&lt;h2&gt;What are the top software, app or lib you wish someone would write in 2013?&lt;/h2&gt;
&lt;p&gt;A killer bookmark manager in my browser to manage my delicious
bookmarks.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>After a long hiatus</title><link href="file:///home/smetj/projects/github/smetj.net/output/after-a-long-hiatus.html" rel="alternate"></link><updated>2012-09-30T23:46:00+02:00</updated><author><name>smetj</name></author><id>tag:file:///home/smetj/projects/github/smetj.net/output,2012-09-30:after-a-long-hiatus.html</id><summary type="html">&lt;p&gt;Finally after finishing a whole bunch of private &amp;quot;projects&amp;quot;, I'm able to
spend some more time again to the &lt;a class="reference external" href="https://github.com/smetj"&gt;various open source projects&lt;/a&gt; I've
been working on until now. &amp;nbsp;I have gathered a whole bunch of new ideas,
processed good and bad feedback, experienced that some ideas just don't
work out while others are quite encouraging.&lt;/p&gt;
&lt;p&gt;I haven't been totally unproductive though. &amp;nbsp;I have been able to spend
time writing the Python&amp;nbsp;&lt;a class="reference external" href="https://github.com/smetj/wishbone"&gt;Wishbone&lt;/a&gt;&amp;nbsp;library. &amp;nbsp;The Wishbone library is
a lightweight way of writing multiple gevent based parallel processes
which connect multiple modules through an internal message passing
interface into a clean workflow.&lt;/p&gt;
&lt;p&gt;I have also created &lt;a class="reference external" href="https://github.com/smetj/monfs"&gt;MonFS&lt;/a&gt;&amp;nbsp;which is a Fuse filesystem plugin allowing
you to store your Nagios (or compatible) configuration into a MongoDB
and mount that database as a read-only filesystem containing Nagios
configuration files.&lt;/p&gt;
&lt;p&gt;The projects which currently gets most attention is &lt;a class="reference external" href="https://github.com/smetj/molog/tree/wishbone_based"&gt;MoLog&lt;/a&gt;. &amp;nbsp;The
latest development which is a complete rewrite, is currently sitting in
the &lt;em&gt;molog_based&lt;/em&gt; branch. &amp;nbsp;I've split MoLog into 3 &amp;nbsp;parts: &amp;nbsp;The main
engine, a RESTful API and a CLI. &amp;nbsp;The main engine has been
rewritten&amp;nbsp;using the Wishbone and it seems to work reasonably fast even
without doing any optimization and without doing any profiling to
identify existing hot spots.&lt;/p&gt;
&lt;p&gt;It's time to roll up the sleeves and start to do some&amp;nbsp;useful&amp;nbsp;tinkering
and coding again.&lt;/p&gt;
</summary><category term="molog"></category><category term="monitoring"></category></entry></feed>